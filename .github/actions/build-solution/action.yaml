name: "Build Solution"
description: "Execute MSBuild with desired settings, and upload resulting artifact."
inputs:
      build-mode:
        description: 'Solution build mode passed to MSBuild.'
        required: true

      version:
        description: 'Version number to refer to this build and its assets, in the form `major.minor.build`.'
        required: true

runs:
  using: "composite"
  steps:
    - name: "Get Short SHA"
      shell: pwsh
      run: echo "SHORT_SHA=$("${{ github.sha }}".SubString(0, 8))" >> $env:GITHUB_ENV
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
    - name: Install DNF 4.8.1 packs
      shell: pwsh
      working-directory: "C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer"
      run: |
        $InstallPath = "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise"
        $WorkLoads = '--add Microsoft.Net.Component.4.8.1.SDK --add Microsoft.Net.Component.4.8.1.TargetingPack -add Microsoft.Net.ComponentGroup.4.8.1.DeveloperTools'
        $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"", $WorkLoads, '--quiet', '--norestart', '--nocache')
        $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
    - name: Restore Packages
      working-directory: WinNUT_V2
      shell: pwsh
      run: msbuild $env:SLN_DIR -t:restore
    - name: Build solution
      shell: pwsh
      working-directory: WinNUT_V2
      run: >
        msbuild WinNUT_V2.sln -nologo
        -property:Configuration=${{ inputs.build-mode }}
        -property:Version=${{ inputs.version }}
    - name: Package output
      uses: actions/upload-artifact@v3
      with:
        name: ${{ format('winnut-client-{0}-{1}', inputs.build-mode, env.SHORT_SHA) }}
        if-no-files-found: error
        path: WinNUT_V2/WinNUT-Client/bin/${{ inputs.build-mode }}